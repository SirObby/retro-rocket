<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="string_8h" kind="file" language="C++">
    <compoundname>string.h</compoundname>
    <includedby refid="kernel_8h" local="yes">kernel.h</includedby>
    <invincdepgraph>
      <node id="3">
        <label>acpi.h</label>
        <link refid="acpi_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>ahci.h</label>
        <link refid="ahci_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>arp.h</label>
        <link refid="arp_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>basic_tokenizer.h</label>
        <link refid="basic__tokenizer_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>clock.h</label>
        <link refid="clock_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>devicename.h</label>
        <link refid="devicename_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>dhcp.h</label>
        <link refid="dhcp_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>dns.h</label>
        <link refid="dns_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>drawing.h</label>
        <link refid="drawing_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>e1000.h</label>
        <link refid="e1000_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>ethernet.h</label>
        <link refid="ethernet_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>fat32.h</label>
        <link refid="fat32_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>fpu.h</label>
        <link refid="fpu_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>hashmap.h</label>
        <link refid="hashmap_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>icmp.h</label>
        <link refid="icmp_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>idt.h</label>
        <link refid="idt_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>initialisation-functions.h</label>
        <link refid="initialisation-functions_8h"/>
      </node>
      <node id="20">
        <label>interrupt.h</label>
        <link refid="interrupt_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>ip.h</label>
        <link refid="ip_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>kernel.h</label>
        <link refid="kernel_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>maths.h</label>
        <link refid="maths_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>memcpy.h</label>
        <link refid="memcpy_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>net.h</label>
        <link refid="net_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>partition.h</label>
        <link refid="partition_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>pci.h</label>
        <link refid="pci_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="27">
        <label>printf.h</label>
        <link refid="printf_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>ramdisk.h</label>
        <link refid="ramdisk_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>random.h</label>
        <link refid="random_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="30">
        <label>rtl8139.h</label>
        <link refid="rtl8139_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>string.h</label>
        <link refid="string_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="31">
        <label>tcp.h</label>
        <link refid="tcp_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="32">
        <label>udp.h</label>
        <link refid="udp_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="structgc__str" prot="public">gc_str</innerclass>
      <sectiondef kind="func">
      <memberdef kind="function" id="string_8h_1ab6d82ea1bcf2827a207a17fd090c5921" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned int</type>
        <definition>unsigned int strlen</definition>
        <argsstring>(const char *str)</argsstring>
        <name>strlen</name>
        <param>
          <type>const char *</type>
          <declname>str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/string.h" line="15" column="14" declfile="include/string.h" declline="15" declcolumn="14"/>
      </memberdef>
      <memberdef kind="function" id="string_8h_1a11bd144d7d44914099a3aeddf1c8567d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int strcmp</definition>
        <argsstring>(const char *s1, const char *s2)</argsstring>
        <name>strcmp</name>
        <param>
          <type>const char *</type>
          <declname>s1</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>s2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/string.h" line="17" column="5" declfile="include/string.h" declline="17" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="string_8h_1a7f886f6fb9d16724acb21dca4110ec29" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int stricmp</definition>
        <argsstring>(const char *s1, const char *s2)</argsstring>
        <name>stricmp</name>
        <param>
          <type>const char *</type>
          <declname>s1</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>s2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/string.h" line="19" column="5" declfile="include/string.h" declline="19" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="string_8h_1a519d57d33362a8ed067cf5fe6937324e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int strncmp</definition>
        <argsstring>(const char *s1, const char *s2, uint32_t n)</argsstring>
        <name>strncmp</name>
        <param>
          <type>const char *</type>
          <declname>s1</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>s2</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/string.h" line="21" column="5" declfile="include/string.h" declline="21" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="string_8h_1abfcaa2fc7116e670ae5e1041998efae4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int strnicmp</definition>
        <argsstring>(const char *s1, const char *s2, uint32_t n)</argsstring>
        <name>strnicmp</name>
        <param>
          <type>const char *</type>
          <declname>s1</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>s2</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/string.h" line="23" column="5" declfile="include/string.h" declline="23" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="string_8h_1a5e77664365c4f7bd9f260f8ccb89a438" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char</type>
        <definition>char toupper</definition>
        <argsstring>(char low)</argsstring>
        <name>toupper</name>
        <param>
          <type>char</type>
          <declname>low</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/string.h" line="25" column="6" declfile="include/string.h" declline="25" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="string_8h_1a7c7bfb267464615bfa3b86aa79f42a82" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char</type>
        <definition>char tolower</definition>
        <argsstring>(char low)</argsstring>
        <name>tolower</name>
        <param>
          <type>char</type>
          <declname>low</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/string.h" line="27" column="6" declfile="include/string.h" declline="27" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="string_8h_1a14a3b4483efde6e89ca889074842573b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int isalnum</definition>
        <argsstring>(const char x)</argsstring>
        <name>isalnum</name>
        <param>
          <type>const char</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/string.h" line="29" column="5" declfile="include/string.h" declline="29" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="string_8h_1acdeb19758d59ba889395c9236dfdee86" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool isspace</definition>
        <argsstring>(const char x)</argsstring>
        <name>isspace</name>
        <param>
          <type>const char</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/string.h" line="31" column="6" declfile="include/string.h" declline="31" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="string_8h_1a0906de3d7be040547209b648edb876cd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool isalpha</definition>
        <argsstring>(const char x)</argsstring>
        <name>isalpha</name>
        <param>
          <type>const char</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/string.h" line="33" column="6" declfile="include/string.h" declline="33" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="string_8h_1ad7c16a2447154107d5ecd28434993443" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>char * strchr</definition>
        <argsstring>(const char *s, int c)</argsstring>
        <name>strchr</name>
        <param>
          <type>const char *</type>
          <declname>s</declname>
        </param>
        <param>
          <type>int</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/string.h" line="35" column="6" declfile="include/string.h" declline="35" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="string_8h_1a0e2ceb2e6b2122bc57c9a1ab47b15266" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t strlcat</definition>
        <argsstring>(char *dst, const char *src, uint32_t siz)</argsstring>
        <name>strlcat</name>
        <param>
          <type>char *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>siz</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/string.h" line="37" column="10" declfile="include/string.h" declline="37" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="string_8h_1a21cdde3b342cc302afb0e4f4dd705c9d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t strlcpy</definition>
        <argsstring>(char *dst, const char *src, uint32_t siz)</argsstring>
        <name>strlcpy</name>
        <param>
          <type>char *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>siz</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/string.h" line="39" column="10" declfile="include/string.h" declline="39" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="string_8h_1ab70fc99f8c436a06f92db3757b0add04" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>char * strdup</definition>
        <argsstring>(const char *string)</argsstring>
        <name>strdup</name>
        <param>
          <type>const char *</type>
          <declname>string</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/string.h" line="41" column="6" declfile="include/string.h" declline="41" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="string_8h_1a09db8cb55a1a49e29a0fc7ea602558bd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>char * gc_strdup</definition>
        <argsstring>(const char *string)</argsstring>
        <name>gc_strdup</name>
        <param>
          <type>const char *</type>
          <declname>string</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/string.h" line="42" column="6" declfile="include/string.h" declline="42" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="string_8h_1ac1a709dd8deca73c3568bd8adfb3ef29" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int gc</definition>
        <argsstring>()</argsstring>
        <name>gc</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/string.h" line="43" column="5" declfile="include/string.h" declline="43" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="string_8h_1a4c5eabfb109348ff270448b4ab2d0431" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint64_t</type>
        <definition>uint64_t hextoint</definition>
        <argsstring>(const char *n1)</argsstring>
        <name>hextoint</name>
        <param>
          <type>const char *</type>
          <declname>n1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/string.h" line="45" column="10" declfile="include/string.h" declline="45" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="string_8h_1ab4f1fe6803e1a252aecb6341aac12b1e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned char</type>
        <definition>unsigned char isdigit</definition>
        <argsstring>(const char x)</argsstring>
        <name>isdigit</name>
        <param>
          <type>const char</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/string.h" line="47" column="15" declfile="include/string.h" declline="47" declcolumn="15"/>
      </memberdef>
      <memberdef kind="function" id="string_8h_1a9ea6fd19878abf6f8919e901b7db5c74" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned char</type>
        <definition>unsigned char isxdigit</definition>
        <argsstring>(const char x)</argsstring>
        <name>isxdigit</name>
        <param>
          <type>const char</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/string.h" line="48" column="15" declfile="include/string.h" declline="48" declcolumn="15"/>
      </memberdef>
      <memberdef kind="function" id="string_8h_1a30670a60464f77af17dfb353353d6df8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int atoi</definition>
        <argsstring>(const char *s)</argsstring>
        <name>atoi</name>
        <param>
          <type>const char *</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/string.h" line="50" column="5" declfile="include/string.h" declline="50" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="string_8h_1acb52cfc5946dd6c1be448fb25aa3cdb7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int64_t</type>
        <definition>int64_t atoll</definition>
        <argsstring>(const char *s, int radix)</argsstring>
        <name>atoll</name>
        <param>
          <type>const char *</type>
          <declname>s</declname>
        </param>
        <param>
          <type>int</type>
          <declname>radix</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/string.h" line="51" column="9" declfile="include/string.h" declline="51" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="string_8h_1ae962141cec555c1952c6869a06a3b633" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint64_t</type>
        <definition>uint64_t atoull</definition>
        <argsstring>(const char *s)</argsstring>
        <name>atoull</name>
        <param>
          <type>const char *</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/string.h" line="52" column="10" declfile="include/string.h" declline="52" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="string_8h_1a0afa881f98f6ddd2bf7e2b469dd176a6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool atof</definition>
        <argsstring>(const char *s, double *a)</argsstring>
        <name>atof</name>
        <param>
          <type>const char *</type>
          <declname>s</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/string.h" line="53" column="6" declfile="include/string.h" declline="53" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="string_8h_1aa80441bd92270f050b0796561243f410" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int abs</definition>
        <argsstring>(int a)</argsstring>
        <name>abs</name>
        <param>
          <type>int</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/string.h" line="55" column="5" declfile="include/string.h" declline="55" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="string_8h_1ac2504e01693d9eac955a61ea1e2403b5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int64_t</type>
        <definition>int64_t labs</definition>
        <argsstring>(int64_t a)</argsstring>
        <name>labs</name>
        <param>
          <type>int64_t</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/string.h" line="56" column="9" declfile="include/string.h" declline="56" declcolumn="9"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Craig Edwards (<ulink url="mailto:craigedwards@brainbox.cc">craigedwards@brainbox.cc</ulink>) </para>
</simplesect>
<simplesect kind="copyright"><para>Copyright (c) 2012-2023 </para>
</simplesect>
</para>
    </detaileddescription>
    <location file="include/string.h"/>
  </compounddef>
</doxygen>
